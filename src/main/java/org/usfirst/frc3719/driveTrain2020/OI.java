// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3719.driveTrain2020;

import org.usfirst.frc3719.driveTrain2020.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.GenericHID;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj2.command.button.*;
import org.usfirst.frc3719.driveTrain2020.subsystems.*;

import edu.wpi.first.wpilibj2.command.button.POVButton;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS;
	public XboxController xboxController;
    public XboxController xboxControllerJoystick;
    public JoystickButton xboxControllerYButton;
    public JoystickButton xboxControllerAButton;
    public JoystickButton xboxControllerXButton;
    public JoystickButton xboxControllerBButton;
    public JoystickButton xboxControllerStartButton;
    public JoystickButton xboxControllerSelectButton;
    public JoystickButton xboxControllerBumperButton1;
    public JoystickButton xboxControllerBumperButton2;
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public double circOfWheel = 9.42;
    public double circOfControlPanel = 100.18;
    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        xboxController = new XboxController(0);

        xboxControllerYButton = new JoystickButton(xboxController, 4);
        xboxControllerYButton.whenPressed(new ShooterSpeedUp());

        xboxControllerAButton = new JoystickButton(xboxController, 1);
        xboxControllerAButton.whenPressed(new ShooterSpeedUp());
        
        xboxControllerXButton = new JoystickButton(xboxController, 3);
        xboxControllerXButton.whenPressed(new SpinColorWheelRotation());

        xboxControllerBButton = new JoystickButton(xboxController, 2);
        xboxControllerBButton.whenPressed(new SpinColorWheelPosition());

        xboxControllerStartButton = new JoystickButton(xboxController, 8);
        xboxControllerStartButton.whenPressed(new PawlLock());

        xboxControllerSelectButton = new JoystickButton(xboxController, 7);
        xboxControllerSelectButton.whenPressed(new PawlLockReset());

        xboxControllerBumperButton1 = new JoystickButton(xboxController, 5);
        xboxControllerBumperButton1.whenPressed(new LifterDown());

        xboxControllerBumperButton2 = new JoystickButton(xboxController, 6);
        xboxControllerBumperButton2.whenPressed(new LifterUp());

        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("Drive Train", new DriveTrain());
        SmartDashboard.putData("Shooter", new Shooter());
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public XboxController getXboxController() {
        return xboxController;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    
}

