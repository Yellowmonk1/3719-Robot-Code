// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3719.driveTrain2020.subsystems;


import org.usfirst.frc3719.driveTrain2020.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
import edu.wpi.first.wpilibj.Spark;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.revrobotics.CANSparkMax;
import com.revrobotics.CANSparkMaxLowLevel.MotorType;

import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DrivetrainSub extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private CANSparkMax sparkMax1;
    private CANSparkMax sparkMax2;
    private SpeedControllerGroup speedControlLeft;
    private CANSparkMax sparkMax3;
    private CANSparkMax sparkMax4;
    private SpeedControllerGroup speedControllerRight;
    private DifferentialDrive differentailDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public DrivetrainSub() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        sparkMax1 = new CANSparkMax(0, MotorType.kBrushless);
        
        
        
        sparkMax2 = new CANSparkMax(1, MotorType.kBrushless);
        
        
        
        speedControlLeft = new SpeedControllerGroup(sparkMax1, sparkMax2);
        addChild("Speed Control Left",speedControlLeft);
        
        
        sparkMax3 = new CANSparkMax(2, MotorType.kBrushless);
        
        
        
        sparkMax4 = new CANSparkMax(3, MotorType.kBrushless);
        
        
        
        speedControllerRight = new SpeedControllerGroup(sparkMax3, sparkMax4 );
        addChild("Speed Controller Right",speedControllerRight);
        
        
        differentailDrive = new DifferentialDrive(speedControlLeft, speedControllerRight);
        addChild("Differentail lDrive",differentailDrive);
        differentailDrive.setSafetyEnabled(true);
        differentailDrive.setExpiration(0.1);
        differentailDrive.setMaxOutput(1.0);

        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }
    public void SetDrive (Double x, Double y){
        this.differentailDrive.arcadeDrive(-y, x);
    }
    public void DriveMotor (double speed){
        speedControlLeft.set(speed);
        speedControllerRight.set(speed);
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

